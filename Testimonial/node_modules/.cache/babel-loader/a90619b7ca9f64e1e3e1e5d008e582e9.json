{"ast":null,"code":"var _jsxFileName = \"/home/mahmud/Desktop/Active Projects/Sandbox/react-projects-master/03-reviews/setup/src/Review.js\";\nimport React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nimport { VscQuote } from \"react-icons/vsc\";\n\nconst Review = () => {\n  const [index, setIndex] = useState(0);\n  const {\n    name,\n    job,\n    image,\n    text\n  } = people[index];\n\n  const checkNumber = num => {\n    if (num > people.length - 1) {\n      return 0;\n    }\n\n    if (num < 0) {\n      return people.length - 1;\n    } else return num;\n  };\n\n  const nextPerson = () => {\n    setIndex(index => {\n      let newIndex = index + 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const prevPerson = () => {\n    setIndex(index => {\n      let newIndex = index - 1;\n      return checkNumber(newIndex);\n    });\n  };\n\n  const random = () => {\n    let randomNum = Math.ceil(Math.random() * people.length);\n    setIndex(checkNumber(randomNum));\n  };\n\n  return /*#__PURE__*/React.createElement(\"article\", {\n    className: \"review\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"img-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: image,\n    alt: \"\",\n    className: \"person-img\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"quote-icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(VscQuote, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"author\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, name, \" \"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"job\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, job), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, text), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"prev-btn\",\n    onClick: prevPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"next-btn\",\n    onClick: nextPerson,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FaChevronRight, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"random-btn\",\n    onClick: random,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Random\"));\n};\n\nexport default Review;","map":{"version":3,"sources":["/home/mahmud/Desktop/Active Projects/Sandbox/react-projects-master/03-reviews/setup/src/Review.js"],"names":["React","useState","people","FaChevronLeft","FaChevronRight","FaQuoteRight","VscQuote","Review","index","setIndex","name","job","image","text","checkNumber","num","length","nextPerson","newIndex","prevPerson","random","randomNum","Math","ceil"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport people from './data';\nimport { FaChevronLeft, FaChevronRight, FaQuoteRight } from 'react-icons/fa';\nimport { VscQuote } from \"react-icons/vsc\";\n\nconst Review = () => {\nconst [index, setIndex] = useState(0);\nconst {name, job, image, text} = people[index];\n\nconst checkNumber = (num) => {\n  if (num > people.length-1) {\n    return 0;\n  }\n  if (num < 0) {\n    return people.length -1;\n  }\n  else return num;\n}\n\nconst nextPerson = () => {\n  setIndex((index) => {\n    let newIndex = index + 1;\n    return checkNumber(newIndex);\n  });\n};\n\nconst prevPerson = () => {\n  setIndex((index) => {\n    let newIndex = index - 1;\n    return checkNumber(newIndex);\n  });\n};\n\nconst random = () => {\n  let randomNum = Math.ceil(Math.random() * people.length)\n  setIndex(checkNumber(randomNum))\n}\n\nreturn (\n  <article className='review' >\n    <div className='img-container'>\n      <img src={image} alt='' className='person-img'/>\n      <span className=\"quote-icon\">\n        <VscQuote />\n      </span>\n    </div>\n    <h4 className=\"author\">{name} </h4>\n    <p className=\"job\">{job}</p>\n    <p className=\"info\">{text}</p>\n    <div className=\"button-container\">\n      <button className=\"prev-btn\" onClick={prevPerson}>\n        <FaChevronLeft />\n      </button>\n      <button className=\"next-btn\" onClick={nextPerson}>\n        <FaChevronRight />\n      </button>\n    </div>\n      <button className=\"random-btn\" onClick={random}>\n        Random\n      </button>\n  </article>\n)\n};\n\nexport default Review;\n"]},"metadata":{},"sourceType":"module"}